SCANINTERVAL=1s
DOCKER_DIR=/docker

LINK_DIR=/home/.by-volume-id
LINK_MAIN_DEVICE_NAME=docker-data-device-link
LINK_MAIN_FILE="$LINK_DIR/$LINK_MAIN_DEVICE_NAME"
#REGISTRY_CONFIG_FILE=/home/docker-registry-config
REGISTRY_CONFIG_FILE=$(file /home/*.txt | awk '/ASCII text/&&sub(/:.*/,e)&&!a++')
PROJECT_CONFIG_FILE=/etc/wormhole/wormhole.conf

IMAGE_FILE=/home/ubuntu-upstart.tar
IMAGE_NAME=ubuntu-upstart

LOG_FILE=/var/log/docker_start.log

exec >> $LOG_FILE 2>&1
echo "start docker-daemon-start $(date)"
gateway=$(ifconfig eth0 | awk  'sub(/.*inet addr:/,e){gsub(/Bcast:|Mask:|[.]/,FS);for(;q++<4;r=r (ee=r?".":e) rr)for(rr=q==4;+ee<8;ee++)rr+=(int($(8+q)/2^ee%2)&&int($q/2^ee%2))*2^ee;print r}')
ip route replace default via $gateway

mkdir $LINK_DIR 2>/dev/null
mkdir $DOCKER_DIR 2>/dev/null
service docker stop

first_disk=$(readlink -f "$LINK_MAIN_FILE")
[ -b "$first_disk" ]  || {
        # remove the link
  [ -h "$LINK_MAIN_FILE" ] && rm "$LINK_MAIN_FILE"
  echo "scaning host disk:"
  while :; do
     for s in /sys/class/scsi_host/host*/scan; do 
         echo "- - -" > "$s"
     done
     first_disk=/dev/$(lsblk -d -o 'NAME,TYPE' | awk 'NR>1&&$NF=="disk"&&$1!~"xvda$|sda$"&&NF=1{print;exit }')
     [ -b "$first_disk" ] && ! mount | grep "$first_disk" && break
     sleep $SCANINTERVAL
  done
  lsblk
  ln -sf $first_disk $LINK_MAIN_FILE
  echo found data disk $first_disk
}

echo "start format disk $(date)"
mount $first_disk $DOCKER_DIR 2>&1 | grep 'you must specify the filesystem type' && {
  # format the device
  echo format $first_disk mkfs.ext4 -F $first_disk
  mkfs.ext4 -F $first_disk
  mount $first_disk $DOCKER_DIR
}
echo "end format disk $(date)"

[ -f "$REGISTRY_CONFIG_FILE" ] && {
    registry_conf="$REGISTRY_CONFIG_FILE"
} || registry_conf="$PROJECT_CONFIG_FILE"

echo using registry conf $registry_conf

#insecure_registry_opt=$(awk '/^ *registry_url *=/{url="--insecure-registry="$3} { a+=/^ *insecure_registry *= [Tt]rue *(#|$)/} END{ if (a) print url}' "$registry_conf")

insecure_registry_opt=$(awk 'sub(/^ *registry_url *= */,e){url="--insecure-registry="$1} END{print url}' "$registry_conf")

docker_opts="DOCKER_OPTS=\"--debug --graph=$DOCKER_DIR $insecure_registry_opt \""

awk -v d="$docker_opts" '!/^DOCKER_OPTS/;END{print d}' /etc/default/docker > /tmp/.$$ && mv /tmp/.$$ /etc/default/docker || rm /tmp/.$$

mount | grep -w "$DOCKER_DIR" && {

  echo "start docker $(date)"
  service docker restart && {
    echo docker restart on $DOCKER_DIR successfully
    ! docker images $IMAGE_NMAE| grep $IMAGE_NAME  && docker load --input $IMAGE_FILE && {
        docker images | grep $IMAGE_NAME || docker tag $(docker images -aq) $IMAGE_NAME
        echo docker import image $IMAGE_NAME from $IMAGE_FILE successfully
    }
  }
  service docker status | grep start  && ( wormhole-api >/dev/null 2>&1 &)
  echo "end docker $(date)"
}
true
echo "end docker-daemon-start $(date)"
